//---------------------------AI Talk--------------------------
//This is where all their random conversations are stored.

/*
This file has...

AiTalk
RandomTalk
any chains you set up
HourCheck
OnMinuteChange
OnSecondChange
OffscreenTalk
EndOffscreenTalk
OnSurfaceRestore
OnKeyPress
*/


//--AiTalk
//Advanced users, this is mostly setting up whether or not dialogue is in a chain before it displays. Again, you can leave it alone unless you want to screw around with chains for some strange reason.

AiTalk
 {
	if RAND(100) < communicateratio
 	{
 		StartCommunicate
	}
 	else
	{
 		if mikireflag == 0
		{
			if CHAIN.IDName == "" {
 				lastTalk = RandomTalk
			}
			else {
				lastTalk = ChainTalk
			}
			lastTalk
		}
 		else
		{ 
		MikireTalk
 		}
	}
 }


//--RandomTalk 
//These are the conversations that they'll have with you or each other that pop up depending on the talk rate defined in menu.dic (or if you ignored that, set in bootend.dic in the first boot, which would be every five minutes).

//--Rules (By Quonit)

// You can change the size of text using \f[height,(number, or the word default).
 // \f[strike,true] makes the words struck out.
 // \f[strike,defualt] resets the text to defualt.
 // \f[sub,true] makes text subscript.
 // \f[sub,default] resets text to normal.
 // \f[sup,true] makes text superscript.
 // \f[sup,false] makes the text normal again.
 // \f[underline,true] underlines text.
 // \f[underline,default] removes the line from under the text.
 // \f[bold,true] makes your statement bold.
 // \f[bold,false] makes the text not so bold.
 // \f[italic,true] makes text slanted.
 // \f[italic,false] de-slants the text.
 // \f[color0-255,0-255,0-255] changes the color of the text.
 // \f[color,default] will return the color to default.
 // \f[default] returns everything back to normal.
 // \_a[[http://www.website.com/](put text here)\_a can link a website in dialogue.
 // \0\s[0]\1\s[0]\_s(put dialogue here) has characters say dialogue at the same time.
 // The envelope %(username)
 // The envelope %(heshe)
 
//Envelopes
 //%(userfolder)

//SURFACE GUIDE
//put all your surfaces here with a word or two on what they are


RandomTalk : nonoverlap
{	
//	--Chains
//	"\0\s[0]This is the first part of a chained dialogue.\w8\1\s[10]Second part to come when we next speak.\e:chain=achain"

/*	NowShell Script
	if nowshell == "master" //This checks to see what shell they're currently using. You may remember this value being defined back in bootend.dic.
	{
	"\0\s[0]Here is dialogue related to the default shell.\w8\1\s[10]You can use this to comment on clothing your ghost is wearing.\e"
	
	"\0\s[0]Here is more dialogue related to the default shell.\e"
	}
*/
	
	if CatStatus == "out" && OtterStatus == "out" && DogStatus == "out" && PenguinStatus == "out"
	{
	}
	elseif CatStatus == "out" && DogStatus == "out" && OtterStatus == "out"
	{
	}
	elseif CatStatus == "out" && DogStatus == "out" && PenguinStatus == "out"
	{
	}
	elseif CatStatus == "out" && OtterStatus == "out" && PenguinStatus == "out"
	{
	}
	elseif DogStatus == "out" && OtterStatus == "out" && PenguinStatus == "out"
	{
	}
	elseif CatStatus == "out" && DogStatus == "out"
	{
	}
	elseif CatStatus == "out" && OtterStatus == "out"
	{
	}
	elseif CatStatus == "out" && PenguinStatus == "out"
	{
	}
	elseif DogStatus == "out" && OtterStatus == "out"
	{
	}
	elseif DogStatus == "out" && PenguinStatus == "out"
	{
	}
	elseif OtterStatus == "out" && PenguinStatus == "out"
	{
	}
	elseif CatStatus == "out"
	{
	}
	elseif DogStatus == "out"
	{
	}
	elseif OtterStatus == "out"
	{
		"\p[3]\s[205]I hope you're having a fun day."
	}
	elseif PenguinStatus == "out"
	{
	}
	
	"\0\s[0]Literally the only thing to say."
	

/* Month dialogue

	if month >= 12
	{
		"\0\s[0]This is dialogue for December.\w8\1\s[18]A cold month?\e"
		
		"\0\s[0]This is more dialogue for December.\w8\1\s[18]Still cold?\e"
	}
	
	if month == 1
	{
		"\0\s[0]This is dialogue for January.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for January.\w8\1\s[10]That it is.\e"
	}
	if month == 2
	{
		"\0\s[0]This is dialogue for February.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for February.\w8\1\s[10]That it is.\e"
	}
	if month == 3
	{
		"\0\s[0]This is dialogue for March.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for March.\w8\1\s[10]That it is.\e"
	}
	if month == 4
	{
		"\0\s[0]This is dialogue for April.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for April.\w8\1\s[10]That it is.\e"
	}
	if month == 5
	{
		"\0\s[0]This is dialogue for May.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for May.\w8\1\s[10]That it is.\e"
	}
	if month == 6
	{
		"\0\s[0]This is dialogue for June.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for June.\w8\1\s[10]That it is.\e"
	}
	if month == 7
	{
		"\0\s[0]This is dialogue for July.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for July.\w8\1\s[10]That it is.\e"
	}
	if month == 8
	{
		"\0\s[0]This is dialogue for August.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for August.\w8\1\s[10]That it is.\e"
	}
	if month == 9
	{
		"\0\s[0]This is dialogue for September.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for September.\w8\1\s[10]That it is.\e"
	}
	if month == 10
	{
		"\0\s[0]This is dialogue for October.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for October.\w8\1\s[10]That it is.\e"
	}
	if month == 11
	{
		"\0\s[0]This is dialogue for November.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for November.\w8\1\s[10]That it is.\e"
	}
	
	*/
	
	/*
	//These ifs check what day of the week it is.
	
	if weekday == 1
	{
		"\0\s[0]This is dialogue for Monday.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for Monday.\w8\1\s[10]That it is.\e"
	}
	if weekday == 2
	{
		"\0\s[0]This is dialogue for Tuesday.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for Tuesday.\w8\1\s[10]That it is.\e"
	}
	if weekday == 3
	{
		"\0\s[0]This is dialogue for Wednesday.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for Wednesday.\w8\1\s[10]That it is.\e"
	}
	if weekday == 4
	{
		"\0\s[0]This is dialogue for Thursday.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for Thursday.\w8\1\s[10]That it is.\e"
	}
	if weekday == 5
	{
		"\0\s[0]This is dialogue for Friday.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for Friday.\w8\1\s[10]That it is.\e"
	}
	if weekday == 6
	{
		"\0\s[0]This is dialogue for Saturday.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for Saturday.\w8\1\s[10]That it is.\e"
	}
	if weekday == 7
	{
		"\0\s[0]This is dialogue for Sunday.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for Sunday.\w8\1\s[10]That it is.\e"
	}
	
	//These ifs check for the time of day as defined in bootend.dic.
	
	if timeslot == "earlymorning"
	{
		"\0\s[0]This is dialogue for the early morning.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for early morning.\w8\1\s[10]That it is.\e"
	}
	if timeslot == "morning"
	{
		"\0\s[0]This is dialogue for the morning.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for the morning.\w8\1\s[10]That it is.\e"
	}
	if timeslot == "lunch"
	{
		"\0\s[0]This is dialogue for lunch time.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for lunch time.\w8\1\s[10]That it is.\e"
	}
	if timeslot == "afternoon"
	{
		"\0\s[0]This is dialogue for the afternoon.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for the afternoon.\w8\1\s[10]That it is.\e"
	}
	if timeslot == "evening"
	{
		"\0\s[0]This is dialogue for the evening.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for the evening.\w8\1\s[10]That it is.\e"
	}
	if timeslot == "latenight"
	{
		"\0\s[0]This is dialogue for the late night.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for the late night.\w8\1\s[10]That it is.\e"
	}
	if timeslot == "midnight"
	{
		"\0\s[0]This is dialogue for midnight.\w8\1\s[10]Yup.\e"
		
		"\0\s[0]This is more dialogue for midnight.\w8\1\s[10]That it is.\e"
	}
	*/
}


//--Chains
//Here is where you will put your bits of chain dialogue.
//Each chain function will go through each part of the chain in order even if it's in one function, until it goes to \e:chain=end which will end the chain. So you can put the entire chain dialogue into one place.

achain
{{CHAIN
	//this will happen the first time the chain is called
	"\0\s[0]Here is the second part of the chain.\w8\1\s[10]Will there be more?\e"
	
	//they will then go to this dialogue next
	"\0\s[0]This is the third part of chained dialogue.\1\w8\s[10]This will lead to a fourth part.\e"
	
	//this will be the last piece of dialogue in the chain, then they will go back to their normal dialogue
	"\0\s[0]This is the fourth piece of chained dialogue.\1\w8\s[10]This is the end.\e:chain=end"
}}CHAIN

//Pay careful attention to the CHAIN text and double brackets for these.
//Note also it ends with \e:chain=end, basically ending the chain.


//-OnMinuteChange
//These are time-related bits of dialogue for your ghost to say. If you're uninterested, you can delete it all except for a line for MikireTalk. 

//Keeps track of if an hour has passed. Just ignore this.
HourCheck
{
if passmin >= 60
	{
		passmin = 0
		passhour = passhour + 1
	}
}


OnMinuteChange //This is what will trigger time-based dialogue for your Ghost.
 {
	HourCheck //checks to see if an hour has passed, ignore it
	--
 	if minute == 0 //These ifs will check what time it is. 
	{
		if clockalarm = 100 || clockalarm = 200 || clockalarm = 300 || clockalarm = 400 || clockalarm = 500 || clockalarm = 600 || clockalarm = 700 || clockalarm = 800 ||clockalarm = 900 || clockalarm = 1000 || clockalarm = 1100 || clockalarm = 1200 || clockalarm = 1300 || clockalarm = 1400 || clockalarm = 1500 || clockalarm = 1600 || clockalarm = 1700 || clockalarm = 1800 || clockalarm = 1900 || clockalarm = 2000 || clockalarm = 2100 || clockalarm = 2200 || clockalarm = 2300 || clockalarm = 0
		{
			"\0\s[0]Time for the alarm to be done! \w8\w8Come on now! Get up!\w8\w8 You better not snooze this."
			clockalarm = 0
		}
 		if hour == 12 //And the hour equals 12, meaning it's noon. 
		{
			case ANY(Present)
				{
					when "cat"
					{
						"\0\s[0]Fanger: "
					}
					when "dog"
					{
						"\1\s[10]Winnie: "
					}
					when "otter"
					{
						"\p[3]\s[200]Shelly: "
					}
					when "penguin"
					{
						"\p[4]\s[300]Paige: "
					}
				}
			--
 			"It's already noon.\w8\w8 Middle of the day already."
		}
 		elseif hour == 0
		{
 			"\0\s[0]It's midnight!\e"
 			"\0\s[0]This is another bit of dialogue for midnight.\w8\1\s[10]BooooOoooOOOooOOOOo.\e"
 			"\0\s[0]This is the third bit of dialogue for midnight.\e"
		}
		else
		{
			case ANY(Present)
			{
				when "cat"
				{
					"\0\s[0]Fanger: "
				}
				when "dog"
				{
					"\1\s[10]Winnie: "
				}
				when "otter"
				{
					"\p[3]\s[200]Shelly: "
				}
				when "penguin"
				{
					"\p[4]\s[300]Paige: "
				}
			}
			--
			"It's %(hour12)'o clock.\e"
			//%(hour12) stores the time. This is a general top of the hour notification.
		}
	}
	elseif hour == 23 && minute == 55 //this checks to see if the hour is 23 and the minutes are at 55... essentially, 11:55 pm.
	{
		case ANY(Present)
		{
			when "cat"
			{
				"\0\s[0]Fanger: "
			}
			when "dog"
			{
				"\1\s[10]Winnie: "
			}
			when "otter"
			{
				"\p[3]\s[200]Shelly: "
			}
			when "penguin"
			{
				"\p[4]\s[300]Paige: "
			}
		}
		--
		"5 minutes to midnight."
		--
		if CatStatus = "out"
		{
			"\n\n\0\s[3]Fanger: You,\w8 uh,\w8 you going to bed soon?\e"
		}
	}
	elseif hour == 7 && minute == 30 && weekday == 0 //Here, it's checking for a specific time on a specific day.
	{		
		case ANY(Present)
		{
			when "cat"
			{
				"\0\s[0]Fanger: "
			}
			when "dog"
			{
				"\1\s[10]Winnie: "
			}
			when "otter"
			{
				"\p[3]\s[200]Shelly: "
			}
			when "penguin"
			{
				"\p[4]\s[300]Paige: "
			}
		}
		--
		"It's 7:30 on Sunday.\w8\w8 Do you have a busy week ahead?\e"
	}
	//If you're not interested in these more specific checks, you can delete those last two elseifs and just leave the one for minute==0, or clear them all out as mentioned above, although leave in the HourCheck and mikireflag bits.
	
	//Don't touch this part.
	elseif ARRAYSIZE(offscreen) > 0 //If the ghost is off the screen, it will run the off screen dialogue every minute
    {
         OffscreenTalk
    }
 }

//--OnSecondChange
//Like the above, this handles what happens every time a second goes by.

OnSecondChange
 {
/* UNUSED STATUS CHECK
	 if passec == 1 || passec == 3 || passec == 5 || passec == 7 || passec == 9 || passec == 11 || passec == 13 || passec == 15 || passec == 17 || passec == 19 || passec == 21 || passec == 23 || passec == 25 || passec == 27 || passec == 29 || passec == 31 || passec == 33 || passec == 35 || passec == 37 || passec == 39 || passec == 41 || passec == 43 || passec == 45 || passec == 47 || passec == 49 || passec == 51 || passec == 53|| passec == 55 || passec == 57 || passec == 59
	{
		if reference1 == -1
		{
			DogStatus = "off"
		}
		else
		{
			DogStatus = "out"
		}
		--
		if reference0 == -1
		{
			CatStatus = "off"
		}
		else
		{
			CatStatus = "off"
		}
		--
		if reference2 == -1
		{
			OtterStatus = "off"
		}
		else
		{
			OtterStatus = "out"
		}
		--
		if reference3 == -1
		{
			PenguinStatus = "off"
		}
		else
		{
			PenguinStatus = "out"
		}
	}

	
	if passsec == 2 || passec == 4 || passsec == 6 || passec == 8 || passsec == 10 || passec == 12 || passsec == 14 || passec == 16  || passsec == 18 || passec == 20 || passsec == 22 || passec == 24 || passsec == 26 || passec == 28 || passsec == 30 || passec == 32 || passsec == 34 || passec == 36 || passsec == 38 || passec == 40  || passsec == 42 || passec == 44 || passsec == 46 || passec == 48 || passec == 50 || passec == 52 || passec == 54 || passec == 56 || passec == 58
	{
		if Wyenstatus == "HIDDEN"
		{
			"\1\s[-1]"
		}
		else
		{
			"\1\s[10]"
		}
	}
*/

	if passsec == 59
 		{
	 	passsec = 1
 		passmin = passmin + 1
		}
 	else
 		{
	 	passsec = passsec + 1
		}
	--
	if timeralarm != 0
	{
		timercountsec += 1
		if timercountsec == 59
		{
			timercountsec = 1
			timercountmin += 1
		}
		--
		if timercountmin == timeralarm
		{
			"\![raise,OnAlarmRing]"
		}
	}
	if mikireflag == 0 && reference1 == 1 //Dialogue for putting them off the screen. You could make this a unique line if you wanted (Like "Hey! What are you doing?"), and have MikireTalk below be for if they continue to be offscreen ("Why are you leaving me out here? Help!" for example). I'll add an example bit of dialogue and comment it out, you can uncomment it and use it if you like, or just leave it out and use MikireTalk below.
	{
		//"\0\s[0]You've moved me off screen."
		
		MikireTalk
	}
	if mikireflag == 1 && reference1 == 0 //Dialogue for coming back on the screen
	{
		EndMikireTalk
	}
	mikireflag = reference1 //reference1 is if the ghost is offscreen or not
	if reference2 == 1
	{
 		//This dialogue is for when the two characters are overlapping each other. If you don't want your characters to care, you can just leave this blank.
		
 		"\0\s[0]Me and Triangle are overlapping.\w8\1\s[19]That's strange since your resolution is %screenwidthx%screenheight, %(username). Shouldn't we have enough space?\4\e"
	}
 }

 //---- MikireTalk ---------------------------------------------------------------------
 //MikireTalk is dialogue for when your main character is off-screen. Like if you dragged Girl over to the side of your monitor until she was partially concealed by it.
 
MikireTalk
 {
	"\0\s[0]Fanger: I'm off the screen.\w8w8 Just push Ctrl-Shift-F12 to bring me back."
	//Note the hotkey combo Triangle mentions.
 }

 //----EndMikireTalk--------------------------------------------------------------------
 //For after you bring the character back on screen.
 
EndMikireTalk
 {
	"\0\s[0]I'm no longer off the screen.\w8\1\s[19]What a shame.\w8\0\s[9]\n\n[half]Shut up.\e"
 }


//**** OnSurfaceRestore *****************************************************************
//What this does is that after a short period of time, the ghost will go back to its default pose, so you won't have a ghost stuck in one expression for too long.

OnSurfaceRestore
 {
 	if CatStatus == "out"
		{
			"\0\s[0]"
		}
	--
	if DogStatus == "out"
		{
			"\1\s[10]"
		}
	--
	if OtterStatus == "out"
		{
			"\p[3]\s[200]"
		}
	--
	if PenguinStatus == "out"
		{
			"\p[4]\s[300]"
		}
 }

 
 //--OnKeyPress
 //This defines the hotkeys your ghost will use.
 
OnKeyPress
{
	if reference0 == "t"
	{
	OnAiTalk
	}
	elseif reference0 == "r"
	{
	OnLastTalk
	}
	elseif reference0 == "f1"
	{
	"\![open,readme]"
	}
}